/*
2.6-4 Контейнер set
Задание по программированию «Автобусные остановки — 3»


В этой задаче вам нужно присваивать номера автобусным маршрутам.

А именно, для каждого маршрута, заданного множеством названий остановок, нужно либо выдать новый номер (первому маршруту
— 1, второму — 2 и т. д.), либо вернуть номер существующего маршрута, которому соответствует такое множество остановок.

В отличие от задачи «Автобусные остановки — 2», наборы остановок, которые можно получить друг из друга перестановкой
элементов или добавлением/удалением повторяющихся, следует считать одинаковыми.

Формат ввода
Сначала вводится количество запросов Q, затем Q описаний запросов.

Каждый запрос представляет собой положительное количество остановок N, за которым следуют разделённые пробелом N
названий остановок соответствующего маршрута (не обязательно различных). Названия остановок состоят лишь из латинских
букв и символов подчёркивания.

Формат вывода
Выведите ответ на каждый запрос в отдельной строке.

Если маршрут с данным набором остановок уже существует, в ответ на соответствующий запрос выведите Already exists for i,
где i — номер маршрута с таким набором остановок. В противном случае нужно выделить введённому набору остановок новый
номер i и вывести его в формате New bus i.
*/
#include <iostream>
#include <map>
#include <set>
#include <string>
#include <vector>

using namespace std;

int main()
{
  int count_bus = 0, cmd_n; //счётчик маршрутов, кол-во команд
  cin >> cmd_n;
  map<set<string>, int> Bus_num; //словарь маршрут/его порядковый номер

  for (int i = 0; i < cmd_n; ++i)
  {
    int cmd_stop;
    cin >> cmd_stop;
    set<string> bus_cmd; //остановки маршрута
    for (int var = 0; var < cmd_stop; ++var)
    {
      string str;
      cin >> str;
      bus_cmd.insert(str);
    }
    if (Bus_num.count(bus_cmd))
      cout << "Already exists for " << Bus_num[bus_cmd] << endl;
    else
    {
      Bus_num[bus_cmd] = ++count_bus;
      cout << "New bus " << count_bus << endl;
    }
  }
  return 0;
}
